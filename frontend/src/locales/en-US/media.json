{
  "media": {
    "libraryTitle": "Media Library",
    "all": "All",
    "video": "Video",
    "audio": "Audio",
    "processing": "Processing",
    "importFiles": "Import Files",
    "selected": "Selected",
    "selectedItems": "Selected Items:",
    "dragFilesHere": "Drag files here to import",
    "noItemsInCategory": "No items in current category",
    "supportedFormats": "Supports video formats like MP4, WebM, AVI, image formats like JPG, PNG, GIF, and audio formats like MP3, WAV, M4A",
    "waiting": "Waiting",
    "processingItem": "Processing",
    "conversionFailed": "Conversion Failed",
    "removeMedia": "Remove Media",
    "deleteMedia": "Delete Media",
    "batchDeleteConfirmation": "Are you sure you want to delete the selected {count} items?",
    "batchDelete": "Batch Delete",
    "deleteSelectedItems": "Delete selected {count} items in batch",
    "importLocalFiles": "Import Local Files",
    "remoteDownload": "Remote Download",
    "mediaRemoved": "Media \"{name}\" has been removed from the project",
    "mediaRemoveError": "An error occurred while deleting media \"{name}\"",
    "allFilesFailed": "All selected files could not be processed. Please check if the file formats are supported",
    "deleteComplete": "Deletion complete: {success} successful, {failed} failed",
    "unknownMedia": "Unknown Media"
  },
  "remoteDownload": {
    "title": "Remote Download",
    "urlLabel": "Remote File URL",
    "urlPlaceholder": "https://example.com/video.mp4",
    "durationLabel": "Expected Duration (seconds)",
    "durationPlaceholder": "5.0",
    "durationHelp": "Used to create placeholder on timeline, actual duration based on downloaded file",
    "nameLabel": "Asset Name (optional)",
    "namePlaceholder": "Auto extract from URL",
    "timeoutLabel": "Timeout (seconds)",
    "timeoutHelp": "Download timeout, default {default} seconds",
    "supportedFormats": "Supported file formats:",
    "startDownload": "Start Download",
    "urlProtocolError": "Only HTTP and HTTPS protocols are supported",
    "urlInvalidError": "Please enter a valid URL"
  }
}